{"ast":null,"code":"import axios from \"axios\";\nimport fakeServer from \"../../helpers/fakeServer\";\nimport backendApiUrls from \"../../routes/backendUrls\";\nimport * as types from \"../constants\";\n\nconst getProductsStart = payload => ({\n  type: types.GET_REQUEST_PRODUCTS_START,\n  payload\n});\n\nconst getProductsSuccess = payload => ({\n  type: types.GET_REQUEST_PRODUCTS_SUCCESS,\n  payload\n});\n\nconst getProductsError = payload => ({\n  type: types.GET_REQUEST_PRODUCTS_ERROR,\n  payload\n});\n\nexport const actionGetProducts = params => dispatch => {\n  console.log('rrr');\n  dispatch(getProductsStart());\n  const config = {\n    params,\n    method: \"GET\",\n    url: backendApiUrls.products\n  }; // debugger\n\n  axios(config) // fakeServer(config)\n  .then(response => {\n    const {\n      data\n    } = response;\n    dispatch(getProductsSuccess(data));\n  }).catch(error => {\n    dispatch(getProductsError(error));\n  });\n};","map":{"version":3,"sources":["/home/boris/petProjects/catalog-app/src/redux/actions/products.js"],"names":["axios","fakeServer","backendApiUrls","types","getProductsStart","payload","type","GET_REQUEST_PRODUCTS_START","getProductsSuccess","GET_REQUEST_PRODUCTS_SUCCESS","getProductsError","GET_REQUEST_PRODUCTS_ERROR","actionGetProducts","params","dispatch","console","log","config","method","url","products","then","response","data","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,KAAK;AACjCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,0BADqB;AAEjCF,EAAAA;AAFiC,CAAL,CAAhC;;AAKA,MAAMG,kBAAkB,GAAGH,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAEH,KAAK,CAACM,4BADuB;AAEnCJ,EAAAA;AAFmC,CAAL,CAAlC;;AAKA,MAAMK,gBAAgB,GAAGL,OAAO,KAAK;AACjCC,EAAAA,IAAI,EAAEH,KAAK,CAACQ,0BADqB;AAEjCN,EAAAA;AAFiC,CAAL,CAAhC;;AAKA,OAAO,MAAMO,iBAAiB,GAAIC,MAAD,IAAYC,QAAQ,IAAI;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAF,EAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACA,QAAMa,MAAM,GAAG;AACXJ,IAAAA,MADW;AAEXK,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,GAAG,EAAEjB,cAAc,CAACkB;AAHT,GAAf,CAHqD,CAQrD;;AAEApB,EAAAA,KAAK,CAACiB,MAAD,CAAL,CACA;AADA,GAEKI,IAFL,CAEUC,QAAQ,IAAI;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAWD,QAAjB;AACAR,IAAAA,QAAQ,CAACN,kBAAkB,CAACe,IAAD,CAAnB,CAAR;AACH,GALL,EAOKC,KAPL,CAOYC,KAAD,IAAW;AACdX,IAAAA,QAAQ,CAACJ,gBAAgB,CAACe,KAAD,CAAjB,CAAR;AACH,GATL;AAUH,CApBM","sourcesContent":["import axios from \"axios\";\nimport fakeServer from \"../../helpers/fakeServer\";\nimport backendApiUrls from \"../../routes/backendUrls\";\nimport * as types from \"../constants\";\n\nconst getProductsStart = payload => ({\n    type: types.GET_REQUEST_PRODUCTS_START,\n    payload,\n});\n\nconst getProductsSuccess = payload => ({\n    type: types.GET_REQUEST_PRODUCTS_SUCCESS,\n    payload,\n});\n\nconst getProductsError = payload => ({\n    type: types.GET_REQUEST_PRODUCTS_ERROR,\n    payload,\n});\n\nexport const actionGetProducts = (params) => dispatch => {\n    console.log('rrr');\n    dispatch(getProductsStart());\n    const config = {\n        params,\n        method: \"GET\",\n        url: backendApiUrls.products,\n    };\n    // debugger\n\n    axios(config)\n    // fakeServer(config)\n        .then(response => {\n            const { data } = response;\n            dispatch(getProductsSuccess(data));\n        })\n\n        .catch((error) => {\n            dispatch(getProductsError(error));\n        });\n};"]},"metadata":{},"sourceType":"module"}