{"ast":null,"code":"import axios from \"axios\";\nimport backendApiUrls from \"routes/backendUrls\";\nimport * as types from \"../constants\";\n\nconst getProductsStart = payload => ({\n  type: types.GET_REQUEST_PRODUCTS_START,\n  payload\n});\n\nconst getProductsSuccess = payload => ({\n  type: types.GET_REQUEST_PRODUCTS_SUCCESS,\n  payload\n});\n\nconst getProductsError = payload => ({\n  type: types.GET_REQUEST_PRODUCTS_ERROR,\n  payload\n});\n\nexport const actionGetProducts = params => dispatch => {\n  dispatch(getProductsStart());\n  const config = {\n    params,\n    method: \"GET\",\n    url: backendApiUrls.products\n  }; // debugger\n\n  axios(config).then(response => {\n    const {\n      data\n    } = response;\n    dispatch(getProductsSuccess(data));\n  }).catch(error => {\n    dispatch(getProductsError(errorsParser(error)));\n  });\n};","map":{"version":3,"sources":["/home/boris/petProjects/catalog-app/src/redux/actions/products.js"],"names":["axios","backendApiUrls","types","getProductsStart","payload","type","GET_REQUEST_PRODUCTS_START","getProductsSuccess","GET_REQUEST_PRODUCTS_SUCCESS","getProductsError","GET_REQUEST_PRODUCTS_ERROR","actionGetProducts","params","dispatch","config","method","url","products","then","response","data","catch","error","errorsParser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,KAAK;AACjCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,0BADqB;AAEjCF,EAAAA;AAFiC,CAAL,CAAhC;;AAKA,MAAMG,kBAAkB,GAAGH,OAAO,KAAK;AACnCC,EAAAA,IAAI,EAAEH,KAAK,CAACM,4BADuB;AAEnCJ,EAAAA;AAFmC,CAAL,CAAlC;;AAKA,MAAMK,gBAAgB,GAAGL,OAAO,KAAK;AACjCC,EAAAA,IAAI,EAAEH,KAAK,CAACQ,0BADqB;AAEjCN,EAAAA;AAFiC,CAAL,CAAhC;;AAKA,OAAO,MAAMO,iBAAiB,GAAIC,MAAD,IAAYC,QAAQ,IAAI;AACrDA,EAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACA,QAAMW,MAAM,GAAG;AACXF,IAAAA,MADW;AAEXG,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,GAAG,EAAEf,cAAc,CAACgB;AAHT,GAAf,CAFqD,CAOrD;;AAEAjB,EAAAA,KAAK,CAACc,MAAD,CAAL,CACKI,IADL,CACUC,QAAQ,IAAI;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAWD,QAAjB;AACAN,IAAAA,QAAQ,CAACN,kBAAkB,CAACa,IAAD,CAAnB,CAAR;AACH,GAJL,EAMKC,KANL,CAMYC,KAAD,IAAW;AACdT,IAAAA,QAAQ,CAACJ,gBAAgB,CAACc,YAAY,CAACD,KAAD,CAAb,CAAjB,CAAR;AACH,GARL;AASH,CAlBM","sourcesContent":["import axios from \"axios\";\nimport backendApiUrls from \"routes/backendUrls\";\nimport * as types from \"../constants\";\n\nconst getProductsStart = payload => ({\n    type: types.GET_REQUEST_PRODUCTS_START,\n    payload,\n});\n\nconst getProductsSuccess = payload => ({\n    type: types.GET_REQUEST_PRODUCTS_SUCCESS,\n    payload,\n});\n\nconst getProductsError = payload => ({\n    type: types.GET_REQUEST_PRODUCTS_ERROR,\n    payload,\n});\n\nexport const actionGetProducts = (params) => dispatch => {\n    dispatch(getProductsStart());\n    const config = {\n        params,\n        method: \"GET\",\n        url: backendApiUrls.products,\n    };\n    // debugger\n\n    axios(config)\n        .then(response => {\n            const { data } = response;\n            dispatch(getProductsSuccess(data));\n        })\n\n        .catch((error) => {\n            dispatch(getProductsError(errorsParser(error) ));\n        });\n};"]},"metadata":{},"sourceType":"module"}